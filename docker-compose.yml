version: '3.5'
services:
    qteste_app:
        image: qteste_app:frakenphp
        build:
            context: ./
            dockerfile: docker/production/Dockerfile
            args:
                - "BUILD_APP_ENV=${APP_ENV}"
        deploy:
            labels:
                - traefik.enable=true
                - traefik.port=80
                - traefik.docker.network=traefik-public
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.qteste-http.rule=Host(`${APP_URL:-localhost}`)
                - traefik.http.routers.qteste-http.entrypoints=http
                - traefik.http.routers.qteste-http.middlewares=https-redirect
                - traefik.http.routers.qteste-https.rule=Host(`${APP_URL:-localhost}`)
                - traefik.http.routers.qteste-https.entrypoints=https
                - traefik.http.routers.qteste-https.tls=true
                - traefik.http.routers.qteste-https.tls.certresolver=le
                - traefik.http.services.qteste.loadbalancer.server.port=80
        restart: always
        volumes:
            -   ./:/app
        ports:
            - ${PORT}:80
        networks:
            - traefik-public
    qteste_scheduler:
        image: qteste_app:frakenphp
        container_name: ${APP_NAME}_scheduler
        restart: unless-stopped
        entrypoint:
            - ./docker/entrypoint.sh
        env_file:
            - .env
        depends_on:
            - qteste_app
        environment:
            - CONTAINER_ROLE=scheduler
            - USERID=${USERID:-1001}
        networks:
            - traefik-public
    qteste_queue:
        image: qteste_app:frakenphp
        container_name: ${APP_NAME}_queue
        restart: unless-stopped
        entrypoint:
            - ./docker/entrypoint.sh
        env_file:
            - .env
        depends_on:
            - qteste_app
        environment:
            - CONTAINER_ROLE=queue
            - USERID=${USERID:-1001}
        networks:
            - traefik-public
networks:
    traefik-public:
        external: true
volumes:
    redisdata:
        driver: local
